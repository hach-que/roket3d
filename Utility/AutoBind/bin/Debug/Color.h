/*
 * This file was automatically generated by AutoBind.
 * Any changes made to this file will be lost when it
 * is next regenerated.
 */

#ifndef CLASS_Engine_Unmanaged_Core_RColor
#define CLASS_Engine_Unmanaged_Core_RColor

/* Imports */
namespace Engine { namespace Unmanaged { namespace Core { class RDevice; } } } 
namespace Engine { namespace Unmanaged { namespace Core { class EventReciever; } } } 
namespace Engine { namespace Collections { class Vector3D; } } 
#include "E.Unmanaged/Core/RDevice.h"
#include "E.Unmanaged/Core/EventReciever.h"
#include "E.Collections/Vector3D.h"

/* Using declarations */
using Engine::Unmanaged::Core;

namespace Engine { namespace Unmanaged { namespace Core
{
    /* Begin class declaration */
    class RColor : public RObject
    {
        /* Variable declarations */
        private double p_R;
        private double p_G;
        private double p_B;

        /* Method and constructor declarations */
        public RColor(lua_State * L, bool byuser);
        private int GetG(lua_State * L);
        private int SetG(lua_State * L);
        public int SomeFunc(lua_State * L);

        /* Automatic property getter-setter declarations */
        int __autobind_property_get_R(lua_State * L);
        int __autobind_property_set_R(lua_State * L);
        int __autobind_property_get_B(lua_State * L);
        int __autobind_property_set_B(lua_State * L);
    };
} 
} 
} 

#endif
